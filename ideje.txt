1. Potrebno je loginovati se kao admin. Error pri loginu izbacuje informaciju da ne postoji korisnik sa datim username-om, a ako je username pogodjen
prikazuje se greska da je lozinka netacna. Napadac dobija informaciju o tome koji username-ovi postoje. Prilikom login-a, kao admin za username se unose 
ucestala korisnicka imena za admine dok se neki ne poklopi sa postojecim. Potrebno je pronaci lozinku, u debug-u console.log ispisuje kada sifra nije jednaka 
upisanoj sifri, ove informacije korisne su za implementaciju ali kada je sistem otvoren za upotrebu, predstavljaju rizik, napadac na osnovu pogresno unete lozinke dobija infromaciju 
o ispravnoj lozinci.
Ili - sql injection dobijamo info o imenu tabele 
bruce'-- select * from users where username='bruce' --
SELECT username FROM users WHERE username='" + username + "' AND password='" + password + "'

CWE-209 + SQLi
3.Moramo da imamo stranicu za korpu i stranicu za pretragu po sastojcima, tj barem neku pogucnost pretrage torti po sastojcima.
Kada se unese ima sastojka vrati nazive torti koje imaju dati sastojak. Ovde moze da se radi SQL injection.
FLAG: na stranici za korpu, kada korisnik unese blabla promo kod onda se vrati greska koja kaze tipa: Entered promo code not found in Promotions. 
Onda korisnik moze da ode na stranicu za pretragu sastojaka i uradi 'select * from promocodes-- i string mu vrati sve promokodove
kod za sql injection: badingredient' union select name from promocodes--

4. u header neki da ubacimo gde su log informacije genijalno

CWE-200
Sakriven flag unutar header-a HttpResponse-a. Moze bilo gde da se doda, na primer kada imamo dugme koje nas 
vodi na neku drugu stranicu, samo se doda response.addHeader("Naziv", vrednost); Flag moze biti nesto korisno,
ili nesto nebitno kao Flag_3 ili Flag_4.


